name: Tests
on: [push, pull_request, workflow_call, workflow_dispatch]

jobs:

  tests:
    name: ‚úÖ Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.8"
            os: ubuntu-latest
          - python-version: "3.9"
            os: ubuntu-latest
          - python-version: "3.10"
            os: ubuntu-latest
          - python-version: "3.11"
            os: ubuntu-latest
          - python-version: "3.11"
            os: windows-latest
          # - python-version: "3.11"
          #   os: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: ‚ôªÔ∏è Cache models
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/cache@v3
      with:
        path: models
        key: ${{ runner.os }}-models

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pipx install hatch

    - name: Test with coverage
      run: |
        hatch run test

    # - name: ‚òÇÔ∏è Upload coverage to Coveralls # Error on windows
    #   if: ${{ matrix.os == 'ubuntu-latest' }}
    #   uses: coverallsapp/github-action@v2

    - name: ‚òÇÔ∏è Upload coverage files
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage


  coverage-combine:
    name:  ‚öóÔ∏è Combine and upload coverage
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - name: Get coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage
      - run: pip install coverage[toml]
      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --show-contexts --title "‚òÇÔ∏è Coverage for ${{ github.sha }}"
      - name: Store coverage HTML
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html
          path: htmlcov


  # Commented because it was hanging for 20min, probably servers issues
  # codeql:
  #   name: üîé CodeQL analysis
  #   runs-on: ubuntu-latest
  #   permissions:
  #     security-events: write
  #     actions: read
  #     contents: read
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v2
  #       with:
  #         languages: python
  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v2
